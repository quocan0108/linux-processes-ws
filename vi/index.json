[
{
	"uri": "//localhost:1313/vi/",
	"title": "Giám sát và điều khiển các tiến trình trong Linux",
	"tags": [],
	"description": "",
	"content": "Giám sát và điều khiển các tiến trình trong Linux Tổng quan Trong bài workshop này, chúng ta sẽ học cách giám sát và điều khiển các tiến trình trong hệ điều hành Linux, một kỹ năng cần thiết để quản lý hệ thống hiệu quả. Qua đó, chúng ta có thể kiểm soát tài nguyên, theo dõi việc sử dụng CPU, RAM và quản lý các tiến trình dựa trên các lệnh cơ bản của Linux.\nChúng ta sẽ sử dụng các lệnh như ps, pstree và top để xem danh sách các tiến trình đang chạy, lưu thông tin giám sát hệ thống vào file để phân tích sau này, và thực hiện các thao tác với tiến trình như chuyển sang chế độ nền, tạm dừng và tiếp tục tiến trình.\nNội dung thực hành sẽ bao gồm việc xem thông tin các tiến trình đang sử dụng nhiều tài nguyên nhất, đếm số lượng tiến trình theo các tiêu chí cụ thể và quản lý tiến trình thông qua các lệnh như bg, fg. Workshop này sẽ giúp bạn nắm rõ cách giám sát, điều khiển và tối ưu hóa các tiến trình trong hệ thống Linux.\nHãy chắc chắn rằng bạn đã có kiến thức cơ bản về hệ điều hành Linux, vì chúng ta sẽ áp dụng những kiến thức này vào các thao tác giám sát và quản lý tiến trình trong hệ thống.\nNội dung: Giới thiệu về tiến trình trong Linux Phân loại tiến trình Thực hành: Giám sát và điều khiển các tiến trình trong Linux "
},
{
	"uri": "//localhost:1313/vi/1-introduce-process/",
	"title": "Giới thiệu về tiến trình Linux",
	"tags": [],
	"description": "",
	"content": "Tiến trình là một thành phần quan trọng trong hệ điều hành Linux, đại diện cho chương trình hoặc dịch vụ đang chạy. Việc nắm vững khái niệm tiến trình, các trạng thái hoạt động và mối quan hệ giữa tiến trình cha và tiến trình con sẽ giúp bạn quản lý hệ thống hiệu quả hơn. Trong phần này, chúng ta sẽ tìm hiểu những khái niệm cơ bản đó để có thể giám sát và điều khiển tiến trình trên Linux.\nNội dung: Tiến trình là gì? Các trạng thái của tiến trình Tiến trình cha và tiến trình con Tiến trình là gì? Trong hệ điều hành Linux, một tiến trình (process) là một chương trình hoặc dịch vụ đang được thực thi. Khi một chương trình được chạy, hệ thống sẽ khởi tạo một tiến trình để thực hiện các tác vụ cần thiết. Mỗi tiến trình sẽ có một mã định danh duy nhất gọi là Process ID (PID). PID cho phép hệ điều hành và người dùng có thể nhận diện, quản lý và tương tác với từng tiến trình cụ thể.\nTiến trình có thể là một chương trình người dùng (user application) như trình duyệt web, hoặc là một dịch vụ hệ thống như dịch vụ mạng (networking service). Khi một tiến trình bắt đầu, nó sẽ được quản lý bởi hệ điều hành, bao gồm việc phân bổ tài nguyên (CPU, RAM) và theo dõi trạng thái của nó trong suốt vòng đời.\nTrạng thái của tiến trình Mỗi tiến trình trong Linux có thể có nhiều trạng thái khác nhau, phản ánh tình trạng hoạt động của tiến trình đó. Dưới đây là các trạng thái chính:\nRunning (R):\nTiến trình đang hoạt động và được thực thi bởi CPU. Tiến trình ở trạng thái này khi nó sẵn sàng chạy hoặc đang chạy trên một hoặc nhiều CPU.\nNhững tiến trình ở trạng thái \u0026ldquo;running\u0026rdquo; sẽ nhận được chu kỳ xử lý từ CPU.\nSleeping (S):\nTiến trình không hoạt động nhưng có thể bị đánh thức để thực thi khi có sự kiện xảy ra.\nCác tiến trình này đang chờ tài nguyên hoặc sự kiện cụ thể (như nhập/xuất dữ liệu) để tiếp tục chạy. Tiến trình ở trạng thái này tiêu tốn ít tài nguyên hơn.\nZombie (Z):\nLà trạng thái của các tiến trình đã kết thúc, nhưng vẫn giữ lại trong bảng quản lý tiến trình của hệ thống. Tiến trình zombie không thực thi bất kỳ nhiệm vụ nào nữa nhưng chưa bị xóa hoàn toàn khỏi hệ thống.\nTrạng thái này xảy ra khi tiến trình cha không nhận tín hiệu từ tiến trình con sau khi tiến trình con hoàn thành. Hệ điều hành giữ lại PID của tiến trình zombie để thông báo cho tiến trình cha.\nStopped (T):\nTiến trình bị dừng lại, không còn tiếp tục thực thi cho đến khi được khôi phục (resumed).\nCó thể do người dùng hoặc hệ thống dừng tạm thời (ví dụ: bằng tín hiệu SIGSTOP). Tiến trình dừng có thể được khôi phục bằng tín hiệu SIGCONT.\nTiến trình cha và tiến trình con Tiến trình cha (Parent Process) Trong hệ điều hành Linux, mỗi tiến trình đều có một \u0026ldquo;tiến trình cha\u0026rdquo; đã sinh ra nó. Tiến trình cha (parent process) là tiến trình chịu trách nhiệm khởi tạo và quản lý tiến trình con.\nMột tiến trình cha có thể sinh ra nhiều tiến trình con bằng cách sử dụng hệ thống lệnh như fork() hoặc exec(). Khi tiến trình cha sử dụng lệnh fork(), một bản sao của chính nó được tạo ra và đây chính là tiến trình con.\nMỗi tiến trình cha đều có thể giám sát và kiểm soát các tiến trình con của nó, bao gồm theo dõi trạng thái, điều khiển dừng, tiếp tục hoặc kết thúc các tiến trình con.\nPID của tiến trình cha có thể được xác định thông qua lệnh ps hoặc bằng cách sử dụng lệnh pstree để hiển thị toàn bộ cây tiến trình. Mỗi tiến trình con sẽ lưu trữ PID của tiến trình cha trong một thuộc tính gọi là PPID (Parent Process ID).\nTiến trình con (Child Process) Tiến trình con (child process) là tiến trình được sinh ra từ một tiến trình cha. Tiến trình con sẽ thừa hưởng các đặc điểm nhất định từ tiến trình cha như biến môi trường, quyền sở hữu, và các thông tin khác. Sau khi được tạo ra, tiến trình con có thể thực hiện các nhiệm vụ độc lập.\nKhi một tiến trình cha tạo ra một tiến trình con, tiến trình cha có thể quyết định \u0026ldquo;đợi\u0026rdquo; tiến trình con kết thúc (sử dụng lệnh wait()), hoặc nó có thể tiếp tục chạy đồng thời với tiến trình con.\nTiến trình con cũng có thể sinh ra các tiến trình con của riêng nó, tạo nên một cây tiến trình (process tree), trong đó các tiến trình được tổ chức theo mối quan hệ cha-con.\nĐặc biệt, tiến trình con sẽ có một PID (Process ID) duy nhất khác với PID của tiến trình cha. Tuy nhiên, PPID của nó sẽ là PID của tiến trình cha.\n"
},
{
	"uri": "//localhost:1313/vi/2-process-classification/",
	"title": "Phân loại tiến trình Linux",
	"tags": [],
	"description": "",
	"content": "Trong hệ điều hành Linux, các tiến trình có thể được phân loại theo nhiều cách khác nhau dựa trên vai trò, nguồn gốc và trạng thái hoạt động của chúng. Việc hiểu rõ các loại tiến trình sẽ giúp người quản trị hệ thống dễ dàng quản lý và giám sát hiệu quả hơn.\nNội dung Tiến trình hệ thống (System Processes) Tiến trình nền (Daemon Processes) Quản lý tiến trình với init và systemd Foreground và Background Processes Tiến trình hệ thống (System Processes) Tiến trình hệ thống (system) là những tiến trình quan trọng mà hệ điều hành sử dụng để duy trì các chức năng cơ bản của nó. Chúng thường được khởi tạo bởi hệ điều hành khi khởi động và thực hiện các nhiệm vụ như quản lý phần cứng, hệ thống tập tin và các dịch vụ hệ thống.\nVí dụ:\nkinit, kworker trên hệ điều hành Linux. systemd hay init (trong các hệ điều hành dùng init truyền thống) là các tiến trình quản lý và khởi động các dịch vụ khác. Tiến trình nền (Daemon Processes) Tiến trình nền (daemon) là các tiến trình không yêu cầu tương tác của người dùng và thường chạy liên tục để thực hiện các nhiệm vụ nền. Chúng thường khởi động khi hệ thống khởi động và dừng khi hệ thống tắt.\nVí dụ:\nhttpd (Apache HTTP Server) sshd (OpenSSH Daemon) cron (Dịch vụ lập lịch tác vụ) Chức năng: Các daemon thực hiện các tác vụ như quản lý kết nối mạng, xử lý các yêu cầu từ dịch vụ web, và thực thi các tác vụ lập lịch định kỳ.\nQuản lý tiến trình với init và systemd init: Là hệ thống khởi động và quản lý tiến trình truyền thống trên các hệ điều hành Unix và Linux. init khởi động khi hệ thống khởi động và quản lý các dịch vụ hệ thống dựa trên các tập tin cấu hình như /etc/inittab.\nƯu điểm: Đơn giản, có thể tùy chỉnh. Nhược điểm: Không còn phổ biến trong các hệ điều hành hiện đại. systemd: Là hệ thống khởi động và quản lý tiến trình hiện đại được sử dụng trong nhiều phân phối Linux hiện đại (như Ubuntu, Fedora, CentOS). systemd thay thế init và cung cấp các tính năng nâng cao như quản lý dịch vụ, theo dõi tiến trình, và khởi động đồng bộ.\nLệnh hữu ích:\nsystemctl start \u0026lt;service\u0026gt;: Khởi động dịch vụ.\nsystemctl stop \u0026lt;service\u0026gt;: Dừng dịch vụ.\nsystemctl restart \u0026lt;service\u0026gt;: Khởi động lại dịch vụ.\nsystemctl status \u0026lt;service\u0026gt;: Xem trạng thái của dịch vụ.\nsystemctl enable \u0026lt;service\u0026gt;: Tự động khởi động dịch vụ khi hệ thống khởi động.\nsystemctl disable \u0026lt;service\u0026gt;: Ngừng tự động khởi động dịch vụ khi hệ thống khởi động.\nForeground và Background Processes Foreground Processes:\nTiến trình chạy ở chế độ foreground là tiến trình mà người dùng tương tác trực tiếp. Khi bạn chạy một lệnh trong terminal, nó thường chạy ở chế độ foreground.\nQuản lý: Bạn có thể ngừng (pause) một tiến trình foreground bằng cách sử dụng Ctrl+Z và tiếp tục bằng lệnh fg.\nBackground Processes:\nTiến trình chạy ở chế độ background là tiến trình không yêu cầu tương tác của người dùng và không chiếm quyền điều khiển terminal. Điều này cho phép bạn tiếp tục làm việc với terminal trong khi tiến trình đó vẫn hoạt động.\nCách chạy:\nĐể chạy một lệnh ở chế độ background, thêm \u0026amp; vào cuối lệnh. Ví dụ: long-running-command \u0026amp; Quản lý:\nDanh sách tiến trình background: Sử dụng lệnh jobs để xem danh sách các tiến trình background.\nTiếp tục tiến trình: Sử dụng lệnh bg %\u0026lt;job_number\u0026gt; để tiếp tục một tiến trình background đã bị tạm ngừng.\nChuyển tiến trình từ background sang foreground: Sử dụng lệnh fg %\u0026lt;job_number\u0026gt;.\n"
},
{
	"uri": "//localhost:1313/vi/3-control-monitoring/",
	"title": "Giám sát, điều khiển các tiến trình",
	"tags": [],
	"description": "",
	"content": "Sau khi bạn đã nắm rõ khái niệm và cách phân loại các tiến trình, phần thực hành này sẽ cung cấp những công cụ cụ thể giúp bạn giám sát và quản lý tiến trình trong hệ thống Linux. Các lệnh được cung cấp sẽ cho phép bạn theo dõi chi tiết các tiến trình đang hoạt động, kiểm soát tài nguyên hệ thống và xử lý những tiến trình bất thường. Thông qua những bài tập này, bạn sẽ có cái nhìn thực tế về cách quản lý tiến trình, từ đó nâng cao khả năng quản trị hệ thống của mình.\nNội dung Xem danh sách các tiến trình đang chạy Xem danh sách các tiến trình dưới dạng cây Xem danh sách các tiến trình với lệnh top Lưu kết quả của lệnh top vào file /root/top.txt Xem tỷ lệ CPU, RAM sử dụng của từng tiến trình In thông tin tiến trình sử dụng nhiều CPU nhất Đếm số lượng tiến trình đang thực thi trên hệ thống Đếm số lượng tiến trình của user root Đếm số lượng tiến trình httpd của user root Thực thi lệnh liệt kê toàn bộ tệp tin và thư mục, lưu kết quả vào list.txt Chuyển lệnh liệt kê trên vào chế độ nền (background) Thực thi lại lệnh bị tạm ngừng Xem danh sách các tiến trình đang chạy Lệnh: ps Mô tả: Lệnh này liệt kê tất cả các tiến trình đang chạy, bao gồm ID tiến trình (PID), người dùng sở hữu tiến trình và các thông tin khác như thời gian bắt đầu, trạng thái. Xem danh sách các tiến trình dưới dạng cây Lệnh: pstree Mô tả: Lệnh này hiển thị các tiến trình theo dạng cây, giúp bạn dễ dàng quan sát các mối quan hệ giữa các tiến trình (ví dụ: tiến trình cha, tiến trình con). Xem danh sách các tiến trình với lệnh top Lệnh: top Mô tả: Hiển thị các tiến trình đang chạy theo thời gian thực cùng với thông tin về việc sử dụng CPU, bộ nhớ, thời gian hoạt động. Bạn có thể thấy các tiến trình sử dụng tài nguyên nhiều nhất. Lưu kết quả của lệnh top vào file /root/top.txt Lệnh: top -n 1 -b \u0026gt;top.txt và head top.txt để kiểm tra nội dung của file. Mô tả: Chỉ chạy một lần và xuất kết quả ra file dưới dạng batch, không phải dạng hiển thị thời gian thực. Xem tỷ lệ CPU, RAM sử dụng của từng tiến trình Lệnh: ps -eo pid,ppid,cmd,%mem,%cpu Mô tả: Hiển thị thông tin về PID, tiến trình cha (PPID), lệnh đã thực thi và % bộ nhớ và CPU mà tiến trình sử dụng. In thông tin tiến trình sử dụng nhiều CPU nhất Lệnh: ps -eo pid,ppid,cmd,%mem,%cpu --sort=-%cpu | head -n 2 Mô tả: Lệnh này sắp xếp các tiến trình theo % sử dụng CPU và in ra tiến trình sử dụng nhiều CPU nhất. Đếm số lượng tiến trình đang thực thi trên hệ thống Lệnh: ps | wc -l Mô tả: Sử dụng lệnh wc để đếm số dòng kết quả của lệnh ps, cho biết có bao nhiêu tiến trình đang chạy. Đếm số lượng tiến trình của user root Lệnh: ps -U root | wc -l Mô tả: Lệnh này đếm số tiến trình mà người dùng root đang thực thi. Đếm số lượng tiến trình httpd của user root Lệnh: ps -U root | grep httpd | wc -l Mô tả: Tìm các tiến trình liên quan đến httpd do user root thực hiện và đếm số lượng. Thực thi lệnh liệt kê toàn bộ tệp tin và thư mục, lưu kết quả vào list.txt Lệnh: ls -lR \u0026gt; list.txt và head list.txt để kiểm tra nội dung file. Mô tả: Liệt kê tất cả các tệp và thư mục theo dạng chi tiết và đệ quy (bao gồm các thư mục con), kết quả lưu vào file. Chuyển lệnh liệt kê trên vào chế độ nền (background) Lệnh: bg Mô tả: Chuyển lệnh đang bị tạm dừng sang chế độ nền để tiếp tục chạy mà không cần phải chờ hoàn thành. Thực thi lại lệnh bị tạm ngừng Lệnh: fg Mô tả: Chạy tiếp lệnh bị tạm ngừng bằng lệnh fg, đưa nó về chế độ tiền cảnh. "
},
{
	"uri": "//localhost:1313/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]